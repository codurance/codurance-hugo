<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on Software Craftsmanship and Agile Development</title>
    <link>http://codurance.com/tags/github/</link>
    <description>Recent content in Github on Software Craftsmanship and Agile Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 15 Jan 2016 00:20:00 +0000</lastBuildDate>
    <atom:link href="http://codurance.com/tags/github/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>GitHubAnimator</title>
      <link>http://codurance.com/blog/GitHubAnimator/</link>
      <pubDate>Fri, 15 Jan 2016 00:20:00 +0000</pubDate>
      
      <guid>http://codurance.com/blog/GitHubAnimator/</guid>
      <description>

&lt;h3 id=&#34;the-beginning&#34;&gt;The Beginning&lt;/h3&gt;

&lt;p&gt;Inspired by my friend &lt;a href=&#34;https://twitter.com/SamirTalwar&#34;&gt;@SamirTalwar&lt;/a&gt; and the initiative he set upon himself to &lt;a href=&#34;http://monospacedmonologues.com/post/136667358499/automating-the-world&#34;&gt;automate the world&lt;/a&gt; I picked up on an idea I had many months ago. Automating the generation of presentations using GitHub commits.&lt;/p&gt;

&lt;h3 id=&#34;what-problem-am-i-trying-to-solve&#34;&gt;What Problem am I Trying to Solve?&lt;/h3&gt;

&lt;p&gt;Often I need to do a software related session and I have to present the code in small steps showing how I approached a problem. This usually involves a lot of copy and pasting code from a repository, one commit at a time, into PowerPoint or KeyNote or some other presentation application or framework. This is a very manual and error-prone process. Also, presentation applications usually know nothing about code, so I also need to hand format the copied code.&lt;/p&gt;

&lt;p&gt;I have had the idea of automating this process but kept delaying it for some reason or another. After reading Samir&amp;rsquo;s posts I finally decided to get it done.&lt;/p&gt;

&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;

&lt;h4 id=&#34;the-language&#34;&gt;THE LANGUAGE&lt;/h4&gt;

&lt;p&gt;I&amp;rsquo;ve been learning F# and I decided this would be a perfect opportunity to do something useful with my new F# skills. Also this problem seemed well-suited to a functional approach.&lt;/p&gt;

&lt;h4 id=&#34;interfacing-with-github&#34;&gt;INTERFACING WITH GITHUB&lt;/h4&gt;

&lt;p&gt;GitHub has published a library to simplify calling their API. It&amp;rsquo;s called &lt;a href=&#34;https://github.com/octokit&#34;&gt;OctoKit&lt;/a&gt; and it&amp;rsquo;s available for numerous languages and platforms. Since I was using .Net I applied &lt;a href=&#34;https://github.com/octokit/octokit.net&#34;&gt;OctoKit.net&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;creating-the-presentation&#34;&gt;CREATING THE PRESENTATION&lt;/h4&gt;

&lt;p&gt;Initially I used Office automation frameworks by Microsoft to generate a PowerPoint presentation, but decided that going with a specific application could be too restrictive. So I started looking for a presentation framework with HTML5 and came across  &lt;a href=&#34;http://lab.hakim.se/reveal-js/#/&#34;&gt;Reveal.js&lt;/a&gt; that proved a good match for what I wanted to build.&lt;/p&gt;

&lt;h5 id=&#34;hightlighting-the-code-samples&#34;&gt;Hightlighting the Code Samples&lt;/h5&gt;

&lt;p&gt;After playing around with Reveal.js I found out that the code highlight features, out of the box, were a bit limited for what I wanted. So I searched for a framework that would work with Reveal.js. I found &lt;a href=&#34;http://prismjs.com/&#34;&gt;Prism.js&lt;/a&gt; did all I wanted and a bit more. I set out to integrate Prism.js with Reveal.js and finally had something that would meet my requirements.&lt;/p&gt;

&lt;h5 id=&#34;fiddling-with-css&#34;&gt;Fiddling With CSS&lt;/h5&gt;

&lt;p&gt;The last part was to make some changes to Reveal.js and Prism.js CSS&amp;rsquo;s to get the desired visual effect. This is an area I&amp;rsquo;m a bit out of my comfort zone so it took me a while to get something half decent.&lt;/p&gt;

&lt;h3 id=&#34;the-end-result&#34;&gt;The End Result&lt;/h3&gt;

&lt;p&gt;The code, as it stands now, is still very crude but it&amp;rsquo;s capable of retrieving all commits for a file in a given repository and generating a presentation with Reveal.js. The presentation has a slide for each commit that changed the specified file. The slides use Prism.js to highlight the code.&lt;/p&gt;

&lt;p&gt;There are still a few things hardcoded in the F# code, so it&amp;rsquo;s not a &amp;ldquo;consumer&amp;rdquo; ready product, but some developers might be able to use it as is. You can find the code &lt;a href=&#34;https://github.com/pedromsantos/GitHubAnimator&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips for a friendly open source experience</title>
      <link>http://codurance.com/blog/Tips-for-a-friendly-open-source-experience/</link>
      <pubDate>Mon, 16 Nov 2015 00:20:00 +0000</pubDate>
      
      <guid>http://codurance.com/blog/Tips-for-a-friendly-open-source-experience/</guid>
      <description>

&lt;p&gt;Open source has moved from being an important actor in software development to being central for plenty of people, especially thanks to &lt;a href=&#34;https://github.com&#34;&gt;Github&lt;/a&gt;. Most of us are simple users of OSS (Open-source software) but being brave and taking a step forward and becoming a contributor, or even an owner, could help you massively in different ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Collaborating with clever people irrespective of their place of residence.&lt;/li&gt;
&lt;li&gt;Improve your social skills through remote communication. Being extrovert is only one of the ingredients for a successful engagement, OSS provides you with a comfortable and safe environment where you can explore other social skills.&lt;/li&gt;
&lt;li&gt;Giving back to the community.&lt;/li&gt;
&lt;li&gt;Great way of learning tools, languages or methodologies in a practical way.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, being able to engage nicely with OSS could be hard. Let me share with you some tips than can help you to ease that experience:&lt;/p&gt;

&lt;h2 id=&#34;contributor-s-point-of-view&#34;&gt;&lt;strong&gt;Contributor&amp;rsquo;s point of view&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&#34;find-a-project&#34;&gt;Find a project&lt;/h3&gt;

&lt;p&gt;That sounds silly, but sometimes, you don&amp;rsquo;t even know where to start. The closer the project is to you, the easier it becomes to engage with. Enlisted in order of proximity:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Talk with your colleagues. A lot of people are secretly working on exciting projects. You could really be surprised!&lt;/li&gt;
&lt;li&gt;Explore the tools that you use and love (or hate :) )&lt;/li&gt;
&lt;li&gt;Use some search tool: &lt;a href=&#34;https://help.github.com/articles/where-can-i-find-open-source-projects-to-work-on/&#34;&gt;Github trending repositories&lt;/a&gt;, &lt;a href=&#34;https://openhatch.org/&#34;&gt;Open Hatch&lt;/a&gt; or &lt;a href=&#34;http://www.codetriage.com/&#34;&gt;Code Triage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;explore-the-project&#34;&gt;Explore the project&lt;/h3&gt;

&lt;p&gt;Download the code, run the tests, use the tool, make a small change&amp;hellip; Everybody has different ideas about what is nice code to work on, be sure that you want to spend your free time working on that codebase. You should be patient and understand that sometimes you will waste your time trying to figure out if that project works for you, no Readme or blog post can tell you if you&amp;rsquo;ll enjoy working on the project.&lt;/p&gt;

&lt;p&gt;By just doing that you could come up with things to work on for later, e.g.:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Outdated documentation.&lt;/li&gt;
&lt;li&gt;Code that is hard to read.&lt;/li&gt;
&lt;li&gt;Flaky test suites or non tested areas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A project is not only its code, so you should explore its social side too. Chats, mailing lists, issues, pull requests, wikis&amp;hellip; Imagine yourself applying to a company for a job and being able to spend as much time as you want reading most of their internals documents. You can do that with OSS, use that opportunity. You can even see &lt;a href=&#34;https://github.com/ampproject/amphtml/pull/484&#34;&gt;bots talking to each other&lt;/a&gt;:&lt;/p&gt;


&lt;img src=&#34;http://codurance.com/assets/img/custom/blog/first-robot.png&#34;  class=&#34;img img-responsive style-screengrab&#34;/&gt;


&lt;hr /&gt;


&lt;img src=&#34;http://codurance.com/assets/img/custom/blog/second-robot.png&#34;  class=&#34;img img-responsive style-screengrab&#34;/&gt;


&lt;h3 id=&#34;be-humble&#34;&gt;Be humble&lt;/h3&gt;

&lt;p&gt;Collaborating in OSS doesn&amp;rsquo;t necessarily mean working on the Linux kernel. If it&amp;rsquo;s your first time, be humble and grab something with a manageable essential complexity. Thanks to your previous exploration you should have enough information about that. Be aware of accidental complexity in general, that&amp;rsquo;s a sign of laziness and in the long term, madness.&lt;/p&gt;

&lt;p&gt;In the same way, don&amp;rsquo;t start your engagement with the project doing a massive refactor or accomplishing some ambitious issue. You can make a difference by taking the time to familiarise yourself with the codebase before making any decision based on your strong judgements.&lt;/p&gt;

&lt;h3 id=&#34;believe-in-the-project&#34;&gt;Believe in the project&lt;/h3&gt;

&lt;p&gt;As &lt;a href=&#34;https://twitter.com/roberttaylor426&#34;&gt;Rob Taylor&lt;/a&gt; pointed out to me the other day there are three elements to be motivated at work according to &lt;a href=&#34;http://deliveringhappiness.com/the-motivation-trifecta-autonomy-mastery-and-purpose/&#34;&gt;Daniel Pink&lt;/a&gt;: autonomy, mastery and purpose. If you don&amp;rsquo;t believe in the OSS project you chose, you will lose a fair amount of purpose, so try to pick up something that really excites you. There are many fish in the sea, so feel free to move around and search for new projects if you&amp;rsquo;re simply not having fun. That&amp;rsquo;s the good stuff of OSS, for most of us it&amp;rsquo;s not paying our bills so we can leave whenever we want.&lt;/p&gt;

&lt;h2 id=&#34;owner-s-point-of-view&#34;&gt;&lt;strong&gt;Owner&amp;rsquo;s point of view&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&#34;be-accessible&#34;&gt;Be accessible&lt;/h3&gt;

&lt;p&gt;Most of OSS&amp;rsquo;s owners are looking for contributors. In order to attract the right people you need to provide the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Clean entry points: not everybody has the same set of skills or the same interests. Organizing your issues around different categories is really helpful for the newbie.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Beginner friendly: As you can see in this &lt;a href=&#34;https://github.com/MunGell/awesome-for-beginners&#34;&gt;repo&lt;/a&gt;, there are several beginner-friendly OSS projects.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;img src=&#34;http://codurance.com/assets/img/custom/blog/labels.png&#34;  class=&#34;img img-responsive style-screengrab&#34;/&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Guidelines: it&amp;rsquo;s really frustrating to invest a lot of time in a PR (Pull Request) and then getting a massive amount of feedback. You could think that your standards are universal, but even something like testing or clean code is not a shared value for everybody. The project should state clearly in the Readme or Wiki what are the expectations for a PR. Don&amp;rsquo;t lower the bar, but explicitly state it. At the end of the day your project needs valuable code, it doesn&amp;rsquo;t matter how much time the contributor needed in order to accomplish the task.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Communication tools: even if the project has great documentation you need to provide ways for the community to engage with each other. &lt;a href=&#34;https://gitter.im/&#34;&gt;Gitter&lt;/a&gt; is a great tool for chatting and google groups are kind of ok for mailing lists. Be approachable there, it&amp;rsquo;s useless to include a Gitter badge in your Readme if nobody is answering the questions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;be-clear&#34;&gt;Be clear&lt;/h3&gt;

&lt;p&gt;Most of the projects that I&amp;rsquo;ve found, lacked the right level of documentation (if you want a good example of the opposite have a look at &lt;a href=&#34;http://www.scalatest.org/&#34;&gt;ScalaTest&lt;/a&gt;. If you&amp;rsquo;re developing a tool, provide living examples of different use cases. Asking to the new joiners to read tons of documentation could be not realistic, a live example could be the easiest way of explaining your project.&lt;/p&gt;

&lt;h3 id=&#34;don-t-scare-people&#34;&gt;Don&amp;rsquo;t scare people&lt;/h3&gt;

&lt;p&gt;Unless you want, of course :). Have a look at &lt;a href=&#34;http://www.theregister.co.uk/2014/04/05/torvalds_sievers_dust_up&#34;&gt;how Linus Torvalds handled some contribution into the Linux kernel&lt;/a&gt;. I can imagine that they have a project with more than needed volunteers and I understand that they have to be really careful about the quality of the code that they merge, but unless you want to scare most of the newbies, don&amp;rsquo;t react like that to unpleasant code.&lt;/p&gt;

&lt;h2 id=&#34;in-conclusion&#34;&gt;IN CONCLUSION&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve been really lucky in a way to get a chance to work with &lt;a href=&#34;https://github.com/marcoVermeulen&#34;&gt;Marco Vermeulen&lt;/a&gt;, the creator of an awesome OSS tool called, &lt;a href=&#34;http://sdkman.io&#34;&gt;SDKMAN&lt;/a&gt;. The first steps were really easy for me as the project was documented, the &lt;a href=&#34;https://cucumber.io/&#34;&gt;Cucumber BDD&lt;/a&gt; test suite was amazingly thorough and indeed, because of the availability of Marco. However, in the past, I&amp;rsquo;ve failed several times engaging with OSS projects and most of the times because of my mistakes. I hope that these tips will help to people that are thinking in collaborating with OSS. In the future I&amp;rsquo;ll go into more detail about what I&amp;rsquo;ve learned working with SDKMAN.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning from our failures</title>
      <link>http://codurance.com/blog/learning-from-our-failures/</link>
      <pubDate>Tue, 14 Jul 2015 17:00:00 +0000</pubDate>
      
      <guid>http://codurance.com/blog/learning-from-our-failures/</guid>
      <description>&lt;p&gt;On my second day at Codurance, I managed to delete the repository with &lt;a href=&#34;http://codurance.com/&#34;&gt;Codurance&amp;rsquo;s GitHub Pages&lt;/a&gt; on it. This made the website unavailable for the first time in a long time, and during best business hours.
I passed by all the checks Github does to make sure you know what you&amp;rsquo;re doing, thinking I was about to delete the fork I accidentally created. When I saw afterwards that the fork was still there, I immediately realized what I had done.&lt;/p&gt;

&lt;p&gt;Now it was time to make a decision: Should I to fix the problem by myself and hope no one noticed it, or confess what I did and get help solving it?
Fortunately, I chose the latter. Mortified, I told the founders what I had done.
Their reaction was very calm. No shaming, no shouting, no blaming.
They immediately started to work on getting the website back up as fast as possible and even tried to reassure me that those kind of things happen.
According to them, everyone makes mistakes and this was an opportunity to learn.&lt;/p&gt;

&lt;p&gt;And indeed it was! I found out, that you can &lt;a href=&#34;http://stackoverflow.com/a/28982367&#34;&gt;ask the GitHub support&lt;/a&gt; to restore your repository with all the pull requests, auth tokens etc. on it, which is supposed to be a very fast way to recover everything.
Since no one really cared that the issue and pull request history was gone, and there were no open issues or pull requests, we restored the code and git history from a local machine. Together with another apprentice, I learned how to encrypt new auth tokens and configure &lt;a href=&#34;https://evansosenko.com/posts/automatic-publishing-github-pages-travis-ci/&#34;&gt;Travis&lt;/a&gt; to be able to push again. Because the auth tokens were gone from the repository, we had to create new ones.
I reconfigured the &lt;a href=&#34;http://www.shadabahmed.com/git/2015/03/06/integrating-slack-with-github-enterprise/&#34;&gt;Slack GitHub integration&lt;/a&gt; and asked the team to have a look at other things that might need reconfiguring.
In the end, the problems weren&amp;rsquo;t as bad as I thought they were, and we could fix the issues together.&lt;/p&gt;

&lt;p&gt;Should Codurance not have given me as many rights to modify the repository as they did? It depends on what you consider a good company culture. Allowing every team member to modify the website counters micro-managing, encourages self-organization and shows the trust placed in us. And that trust didn&amp;rsquo;t waver after I made my mistake. Since then I was able and motivated to fix several issues on the website.
Of course an important factor in dealing with the problem was the fact that the website was build in such a way that it was easily recovered. This is how it&amp;rsquo;s supposed to be to counter the fear of breaking stuff when you are changing things.&lt;/p&gt;

&lt;p&gt;The reaction I got for admitting my mistake gives me the courage to admit the next failure when it occurs, allows me to move on and others to learn from it. Only through trying to remove the fear of failure, &lt;a href=&#34;http://www.forbes.com/sites/darden/2012/06/20/creating-an-innovation-culture-accepting-failure-is-necessary/&#34;&gt;innovation is possible&lt;/a&gt;. I&amp;rsquo;m glad I joined a company with this culture.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>