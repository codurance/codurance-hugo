<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Software Craftsmanship and Agile Development</title>
    <link>http://codurance.com/tags/git/</link>
    <description>Recent content in Git on Software Craftsmanship and Agile Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 15 Jan 2016 00:20:00 +0000</lastBuildDate>
    <atom:link href="http://codurance.com/tags/git/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>GitHubAnimator</title>
      <link>http://codurance.com/blog/GitHubAnimator/</link>
      <pubDate>Fri, 15 Jan 2016 00:20:00 +0000</pubDate>
      
      <guid>http://codurance.com/blog/GitHubAnimator/</guid>
      <description>

&lt;h3 id=&#34;the-beginning&#34;&gt;The Beginning&lt;/h3&gt;

&lt;p&gt;Inspired by my friend &lt;a href=&#34;https://twitter.com/SamirTalwar&#34;&gt;@SamirTalwar&lt;/a&gt; and the initiative he set upon himself to &lt;a href=&#34;http://monospacedmonologues.com/post/136667358499/automating-the-world&#34;&gt;automate the world&lt;/a&gt; I picked up on an idea I had many months ago. Automating the generation of presentations using GitHub commits.&lt;/p&gt;

&lt;h3 id=&#34;what-problem-am-i-trying-to-solve&#34;&gt;What Problem am I Trying to Solve?&lt;/h3&gt;

&lt;p&gt;Often I need to do a software related session and I have to present the code in small steps showing how I approached a problem. This usually involves a lot of copy and pasting code from a repository, one commit at a time, into PowerPoint or KeyNote or some other presentation application or framework. This is a very manual and error-prone process. Also, presentation applications usually know nothing about code, so I also need to hand format the copied code.&lt;/p&gt;

&lt;p&gt;I have had the idea of automating this process but kept delaying it for some reason or another. After reading Samir&amp;rsquo;s posts I finally decided to get it done.&lt;/p&gt;

&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;

&lt;h4 id=&#34;the-language&#34;&gt;THE LANGUAGE&lt;/h4&gt;

&lt;p&gt;I&amp;rsquo;ve been learning F# and I decided this would be a perfect opportunity to do something useful with my new F# skills. Also this problem seemed well-suited to a functional approach.&lt;/p&gt;

&lt;h4 id=&#34;interfacing-with-github&#34;&gt;INTERFACING WITH GITHUB&lt;/h4&gt;

&lt;p&gt;GitHub has published a library to simplify calling their API. It&amp;rsquo;s called &lt;a href=&#34;https://github.com/octokit&#34;&gt;OctoKit&lt;/a&gt; and it&amp;rsquo;s available for numerous languages and platforms. Since I was using .Net I applied &lt;a href=&#34;https://github.com/octokit/octokit.net&#34;&gt;OctoKit.net&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;creating-the-presentation&#34;&gt;CREATING THE PRESENTATION&lt;/h4&gt;

&lt;p&gt;Initially I used Office automation frameworks by Microsoft to generate a PowerPoint presentation, but decided that going with a specific application could be too restrictive. So I started looking for a presentation framework with HTML5 and came across  &lt;a href=&#34;http://lab.hakim.se/reveal-js/#/&#34;&gt;Reveal.js&lt;/a&gt; that proved a good match for what I wanted to build.&lt;/p&gt;

&lt;h5 id=&#34;hightlighting-the-code-samples&#34;&gt;Hightlighting the Code Samples&lt;/h5&gt;

&lt;p&gt;After playing around with Reveal.js I found out that the code highlight features, out of the box, were a bit limited for what I wanted. So I searched for a framework that would work with Reveal.js. I found &lt;a href=&#34;http://prismjs.com/&#34;&gt;Prism.js&lt;/a&gt; did all I wanted and a bit more. I set out to integrate Prism.js with Reveal.js and finally had something that would meet my requirements.&lt;/p&gt;

&lt;h5 id=&#34;fiddling-with-css&#34;&gt;Fiddling With CSS&lt;/h5&gt;

&lt;p&gt;The last part was to make some changes to Reveal.js and Prism.js CSS&amp;rsquo;s to get the desired visual effect. This is an area I&amp;rsquo;m a bit out of my comfort zone so it took me a while to get something half decent.&lt;/p&gt;

&lt;h3 id=&#34;the-end-result&#34;&gt;The End Result&lt;/h3&gt;

&lt;p&gt;The code, as it stands now, is still very crude but it&amp;rsquo;s capable of retrieving all commits for a file in a given repository and generating a presentation with Reveal.js. The presentation has a slide for each commit that changed the specified file. The slides use Prism.js to highlight the code.&lt;/p&gt;

&lt;p&gt;There are still a few things hardcoded in the F# code, so it&amp;rsquo;s not a &amp;ldquo;consumer&amp;rdquo; ready product, but some developers might be able to use it as is. You can find the code &lt;a href=&#34;https://github.com/pedromsantos/GitHubAnimator&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Encouraging Collaboration via Review Branches and Pull Requests</title>
      <link>http://codurance.com/blog/encouraging-collaboration-via-review-branches-and-pull-requests/</link>
      <pubDate>Sat, 11 Aug 2012 18:04:02 +0000</pubDate>
      
      <guid>http://codurance.com/blog/encouraging-collaboration-via-review-branches-and-pull-requests/</guid>
      <description>&lt;p&gt;I have always advocated the use of a small well balanced team for projects rather than many less experienced ones. However this is not always possible. Some time projects require a very fast ramp up with a much larger set of teams where achieving a good balance of talent/skills is not possible and the experience is a commodity. Several large projects I have been involved with in the past have had to make this compromise.&lt;/p&gt;

&lt;p&gt;Collaboration is the key. Especially if the system under development is new and going through constant evolution. Although one can argue that healthy systems must always be in a constant state of evolution.&lt;/p&gt;

&lt;p&gt;In these cases a good level of collaboration within the team is difficult but achievable. Collaboration across teams is near enough impossible unless we setup explicit processes that encourages such behaviour.&lt;/p&gt;

&lt;p&gt;The use of Pull Requests and Review Branches is one such process. Review Branches are essentially very short lived branches, often only lasting a few hours and never longer than a day. The main purpose of the branch is to develop in the smallest increment that is reasonable for the purposes of a review. The development of a single feature would typically result in a number of these branches. The mechanism for inviting others to review a branch and merge into master is known as a Pull Request.&lt;/p&gt;

&lt;p&gt;The principle behind the Review Branch is that the codebase is small enough to allow for an effective review by someone in 15 minutes max. In the first instance all members of the teams other than your own are invited to do the review. Once one or two people have agreed to do the review they will then sit with the developer to go through the changes and merge them to master after a successful review. In case of geographical separated teams desktop sharing technologies and conference facilities should be used. If no one volunteers within 5 or 10 minutes then you can invite your own team member to do the review.&lt;/p&gt;

&lt;p&gt;The primary reason is to share the knowledge across teams via the review process. Quality assurance is a side effect of this process.&lt;/p&gt;

&lt;p&gt;We have found that it often helps if you ask for a &amp;ldquo;review buddy&amp;rdquo; who will pick all your pull/review requests for a particular feature. This will help speed up the process and stop you from going over the same ground with different reviewers.&lt;/p&gt;

&lt;p&gt;Also team members should report in their daily standup the number of pull requests they have reviewed during the previous day and in scrums of scrums the team should report the number of pull requests each team review. They should also report the number of pull requests that were left unanswered within the agreed time limit. This will allow for rebalancing if certain individuals or teams are taking most of the reviews and others are reluctant to volunteer. Needless to say the reviews should be planned in as part of your capacity planning.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>