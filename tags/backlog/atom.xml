<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backlog on Software Craftsmanship and Agile Development</title>
    <link>http://codurance.com/tags/backlog/</link>
    <description>Recent content in Backlog on Software Craftsmanship and Agile Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 23 Mar 2015 14:30:00 +0000</lastBuildDate>
    <atom:link href="http://codurance.com/tags/backlog/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Project Sizing</title>
      <link>http://codurance.com/blog/project-sizing/</link>
      <pubDate>Mon, 23 Mar 2015 14:30:00 +0000</pubDate>
      
      <guid>http://codurance.com/blog/project-sizing/</guid>
      <description>

&lt;p&gt;Sizing a project is one of the most important things we do and it is often the first thing we need precisely when we have the least amount of information. During a pre-sales meeting the client will usually ask for a &amp;ldquo;ballpark&amp;rdquo; figure so that they can understand if the project is feasible. We try to get as much information as possible before we provide a very high-level figure. The approach we take depends on whether the client already has a well defined backlog or if they are expecting us to create the backlog as part of the estimation.&lt;/p&gt;

&lt;h3 id=&#34;sizing-an-existing-product-backlog&#34;&gt;Sizing an existing Product Backlog&lt;/h3&gt;

&lt;p&gt;Often we will have a set of requirements either in a big document or user-story format. It is important to understand each one of these requirements - especially those that are quite vague. These vague requirements often result in an explosion of features and will invalidate our estimates. The first thing we do is to break larger requirements/user-stories down into smaller chunks so that all are defined at similar level. We try to insure that the stories satisfy the &lt;a href=&#34;http://guide.agilealliance.org/guide/invest.html&#34;&gt;INVEST&lt;/a&gt; criteria. The next step is to further define the scope using assumptions and decisions logged against each story. This work to breakdown user-stories and define their scope is ideally done with the client. At the very least, we walkthrough the whole backlog with the client so that they fully understand the stories and the factors that may impact scope.&lt;/p&gt;

&lt;p&gt;Our estimates are based on well understood scope but we also recognise that the scope will change and evolve throughout the duration of the project. Clients generally have a budget agreed and our goal is to provide them with a viable product within that budget. We understand that the viable product may change during the development and the client may want to bring new stories in. We constantly refine our estimates to ensure that the client always understands that the the lowest priority stories may need to be dropped with the introduction of new stories. If the client wishes to keep the lowest priority stories as well then we renegotiate the budget/time for the project. We never negotiate on quality, our craftsmen hone their skills so that quality does not incur any additional cost.&lt;/p&gt;

&lt;p&gt;During estimation we will employ other techniques to better understand the viable product. We create user journeys and mockups where appropriate to make our discussion with the client more productive. We also define the technology stack and high-level architecture to better understand the extent of the work. Again we do understand that these are initial designs are are subject to change.&lt;/p&gt;

&lt;p&gt;Non-functional requirements are always included during sizing. These are factored in the same backlog and treated like other stories.&lt;/p&gt;

&lt;h3 id=&#34;coming-up-with-a-product-backlog&#34;&gt;Coming up with a Product Backlog&lt;/h3&gt;

&lt;p&gt;If the client does not have a well defined set of requirements then we come-up with a product backlog before we apply the above techniques to size the project. Our preferred technique is to use &lt;a href=&#34;http://www.impactmapping.org/&#34;&gt;Impact Mapping&lt;/a&gt;. This allows us to drill down into the features from a clear goal that the client wants to achieve.
Documenting assumptions, decisions, risks, issues and dependencies (ADRID)&lt;/p&gt;

&lt;p&gt;Documenting ADRID is extremely important during project sizing. At the very start of the project there are a lot of unknowns and it is impossible to define everything. We will log assumptions, decisions, risks, issues, and dependencies against each story. We try to confirm assumptions as much as possible but most will remain open at this stage. The reason these are logged against each story is that they help us provide better estimates. They also allow us to re-estimate the story if one or more of the ADRID no-longer holds true or new ones are identified. We have a regular meeting with the client throughout the duration of the project to see if there are any changes to ADRID and to discover more, if we discover any changes to these then parts or the whole of the backlog may require reestimating. Any changes to the estimates are made with agreement from the client.&lt;/p&gt;

&lt;h3 id=&#34;three-point-estimation-technique&#34;&gt;Three-point Estimation Technique&lt;/h3&gt;

&lt;p&gt;When estimating stories we use the &lt;a href=&#34;http://en.wikipedia.org/wiki/Three-point_estimation&#34;&gt;Three-point Estimation&lt;/a&gt; Technique. The technique requires us to provide best, worst and likely case scenario for each story. We provide estimates in concrete days and we always assume the story will be developed using pair programming. We use the ADRID logged against each story to ensure that the factors impacting the scope are well understood. The totals for the 3 types of estimates are gathered to work out the Standard Deviation &lt;code&gt;((worst case - best case)/6)&lt;/code&gt; and the Weighted Average Estimate &lt;code&gt;(best case + (4*likely case) + worst case)/6&lt;/code&gt;. We can then work out the level of confidence as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;50% confidence on the Weighted Average&lt;/li&gt;
&lt;li&gt;70% confidence on Weighted Average + Standard Deviation&lt;/li&gt;
&lt;li&gt;95% confidence on Weighted Average + 2 * Standard Deviation&lt;/li&gt;
&lt;li&gt;99.5% confidence on Weighted Average + 3 * Standard Deviation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: there is a statistical aspects to this type of estimation but it is important to understand that these are still estimates and hence have no guarantees.&lt;/p&gt;

&lt;h3 id=&#34;factor-in-project-setup&#34;&gt;Factor in project setup&lt;/h3&gt;

&lt;p&gt;We factor in Project Setup regardless if the project is greenfield or if we are building on an existing codebase. Time is always required to get started. For greenfield projects this may take the form of an Iteration Zero where we setup things like Source Control, Continuous Integration, and Test Environments. If the team is brand new then we must also factor in time to define and evolve our development process and practices.&lt;/p&gt;

&lt;h3 id=&#34;factor-in-planning-meeting-client-workshops-and-other-meetings&#34;&gt;Factor in planning meeting, client workshops, and other meetings&lt;/h3&gt;

&lt;p&gt;Finally we make sure that the time required for various meetings is factored in. For example planning meetings, retrospectives, demos etc. can take up to a day every two weeks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Impact Mapping</title>
      <link>http://codurance.com/blog/impact-mapping/</link>
      <pubDate>Fri, 09 Jan 2015 10:30:00 +0000</pubDate>
      
      <guid>http://codurance.com/blog/impact-mapping/</guid>
      <description>

&lt;p&gt;We had the pleasure to visit a client who asked us to facilitate a workshop. The aim was to create a plan for their investors in order to release the next round of funding for a social media website. They had a product backlog that was full of of features but they were not sure how to prioritise them. They also had a release roadmap but were unclear as to why certain things needed to be done.&lt;/p&gt;

&lt;p&gt;We decided to run the workshop using &lt;a href=&#34;http://www.impactmapping.org&#34;&gt;Impact Mapping&lt;/a&gt;. The aim of impact mapping is to create a mind-map which has the business goal at the very centre followed by the stakeholders (actors) that will help/hinder the achievement of this goal (&lt;em&gt;who&lt;/em&gt;). The following branch then addresses the behaviours of these actors that will impact the goal (&lt;em&gt;how&lt;/em&gt;) and finally the features that we need to deliver to help support these behaviours (&lt;em&gt;what&lt;/em&gt;).&lt;/p&gt;

&lt;h2 id=&#34;goal&#34;&gt;Goal&lt;/h2&gt;

&lt;p&gt;First of all we asked them to decide on the goal. They came up with a couple:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Achieve target user base.&lt;/li&gt;
&lt;li&gt;Increase revenue.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We asked them to concentrate on one goal for now. They very quickly agreed that achieving the target user base is the key goal and that the revenues will come once they have good market penetration.&lt;/p&gt;

&lt;h2 id=&#34;who&#34;&gt;Who?&lt;/h2&gt;

&lt;p&gt;Once the goal was agreed we asked them to come up with the actors. This took a while. There were some obvious ones like the users, moderators etc. However, they also wanted to include people like advertisers - we challenged that because they were thinking of advertisers in terms of people who will advertise on their platform. This did not directly relate to the goal. However advertisers where we would advertise to gain more users did actually make it to the list. Looking at everything with the goal in mind was already helping us to focus our plan.&lt;/p&gt;

&lt;h2 id=&#34;how&#34;&gt;How?&lt;/h2&gt;

&lt;p&gt;The next step was to see what these actors could do to help or hinder us in achieving our goal. The difficult part was to get people to think about behaviours they would like to impact rather than the features in the product. Initially people kept thinking from the point-of-view of the features. We didn’t stop them but asked them to articulate exactly what behaviour they are looking to support with this feature and how that behaviour will help them towards the goal.&lt;/p&gt;

&lt;p&gt;Initially these behaviours were quite granular but after a few passes we could collapse them into a smaller set - describing them at a level we were comfortable with. We found it quite strange that the behaviours we were looking to encourage were listed along side the behaviours we were trying to discourage. An example of the later was “Posting of inappropriate content”. This however made good sense when we got to the next phase in the exercise because they resulted in distinct features.&lt;/p&gt;

&lt;p&gt;In some cases we found a lot of interdependencies or duplication between behaviours. Although interdependencies were discussed we did not represent them in our mind-map. As for the duplication we realised that these behaviours superficially looked the same but may actually result is very different features in context of different actors. Therefore duplication at this level was not a problem.&lt;/p&gt;

&lt;h2 id=&#34;what&#34;&gt;What?&lt;/h2&gt;

&lt;p&gt;Understanding how to support the behaviours is the final part of this exercise. This was surprisingly easy because a lot of thinking had already gone into this while we where trying to understand the how part. We had to iterate a few times to ensure that we were defining these features at the right level. Although most of the features discovered here were already in the original backlog, everyone found it very useful to be able to trace every single feature back to the original goal. This allowed us to de-prioritise all the features from the original backlog that were not directly aligned with the goal.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The resulting mind-map made it very easy to reason about the features and their place in the release roadmap. The client was very happy that they can now be clear about each feature and provide a strong argument if investors ask for feature which do not align to the original goal.&lt;/p&gt;

&lt;p&gt;Impact mapping is a very useful tool to help focus on the business goal. Having a visual map of features that can be traced back to the actual goal provides a great way to reason and prioritise the backlog and plan the release roadmap.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Defining and Prioritising a Backlog</title>
      <link>http://codurance.com/blog/defining-and-prioritising-a-backlog/</link>
      <pubDate>Thu, 03 Jun 2010 14:58:45 +0000</pubDate>
      
      <guid>http://codurance.com/blog/defining-and-prioritising-a-backlog/</guid>
      <description>&lt;p&gt;What is the best way to review a backlog? How do you ensure that it is &amp;ldquo;complete&amp;rdquo;? How do you ensure that the prioritisation reflects the business vision and goals?&lt;/p&gt;

&lt;p&gt;When first faced with a backlog, you are often overwhelmed by the long list of userstories. The most important step is to set a context for these userstories. Are these userstories organised in a hierarchy of “epics”? This hierarchy will help set a context. But first we need to understand what these epics mean at the highest level. Do they represent a user’s high-level goals or are they merely there as a container for some loosely related stories?&lt;/p&gt;

&lt;p&gt;When reviewing a backlog for completion it is vitally important that the stories are defined in a context. The context can take different forms depending on the nature of the application. For example if an application has a clear high-level flow that the user journeys along then the epics may be defined as activities in this flow and the userstories can be grouped under each epic representing the functionality required for this activity. This &lt;a href=&#34;//www.agileproductdesign.com/blog/the_new_backlog.html&#34;&gt;article&lt;/a&gt; by Jeff Patton presents such an approach. However, your application my exhibit a more random usage scenario. In this case epics representing high-level user goals may represent the best context for the stories. You can also provide references to other artefacts such as user journeys/wireframes to further enrich the context. This &lt;a href=&#34;//tynerblain.com/blog/2009/07/06/writing-complete-user-stories&#34;&gt;article&lt;/a&gt; by Scott Sehlhorst is an interesting discussion of setting a context for user stories.&lt;/p&gt;

&lt;p&gt;This grouping of userstories by a context also helps to manage their prioritisation. You can individually prioritise stories within each epic and then also prioritise the epics. Note that just because one epic has a higher priority does not mean that all its child userstories are of a higher priority. You may discover that only the first few userstories can provide enough functionality that further work on that epic is of a lower priority then working on another epic.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using JIRA for Agile Project Management (without Green Hopper)</title>
      <link>http://codurance.com/blog/using-jira-for-agile-project-management-without-green-hopper/</link>
      <pubDate>Mon, 04 Jan 2010 14:28:16 +0000</pubDate>
      
      <guid>http://codurance.com/blog/using-jira-for-agile-project-management-without-green-hopper/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.atlassian.com/software/jira/&#34;&gt;Jira&lt;/a&gt; from Atlassian  is a very popular issue tracking software and can be quite effectively used for Agile Project Management. Jira has a plugin (Green Hopper) that allows for creation of a backlog, iterations and tasks.  However, with help from the free Mylyn plugin for Eclipse I was able to setup a Product Backlog and Iteration Backlogs.&lt;/p&gt;

&lt;p&gt;For the User Stories in the product backlog I created two issue types (Epic &amp;amp; User Story).  Story hierarchies can be represented using Jira Links.&lt;/p&gt;

&lt;p&gt;_Note: Currently Jira connector in Mylyn has an issue with the &amp;ldquo;depends on&amp;rdquo; and &amp;ldquo;is depended on by&amp;rdquo; relationships. It displays them the wrong way around in the Tasklist hierarchy.  You can keep track of the following issues to see if they&amp;rsquo;re fixed: &lt;a href=&#34;https://bugs.eclipse.org/bugs/show_bug.cgi?id=255680&#34;&gt;255680&lt;/a&gt;, &lt;a href=&#34;https://bugs.eclipse.org/bugs/show_bug.cgi?id=223151&#34;&gt;223151.&lt;/a&gt;_&lt;/p&gt;

&lt;p&gt;For Iteration Backlog I created a version for each iteration and assigned the stories to that version/iteration. Each leaf story can then have Jira Sub-tasks to represent the tasks in a particular iteration. The &lt;code&gt;Resolved&lt;/code&gt; state of the story is used to mark it complete and &lt;code&gt;Colsed&lt;/code&gt; state is used to mark it as &amp;ldquo;accepted&amp;rdquo;. You can use Mylyn to see story hierarchies, also I found Mylyn to be a much more intuitive interface when working on Product and Iteration backlogs.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>