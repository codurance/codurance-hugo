<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mob Programming on Software Craftsmanship and Agile Development</title>
    <link>http://codurance.com/tags/mob-programming/</link>
    <description>Recent content in Mob Programming on Software Craftsmanship and Agile Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 09 Nov 2014 11:00:00 +0000</lastBuildDate>
    <atom:link href="http://codurance.com/tags/mob-programming/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Too Many Cooks</title>
      <link>http://codurance.com/blog/too-many-cooks/</link>
      <pubDate>Sun, 09 Nov 2014 11:00:00 +0000</pubDate>
      
      <guid>http://codurance.com/blog/too-many-cooks/</guid>
      <description>

&lt;p&gt;Last week, &lt;a href=&#34;http://codurance.com/aboutus/ourteam/&#34;&gt;Sandro&lt;/a&gt; and I flew to Bucharest to meet &lt;a href=&#34;http://alexbolboaca.ro/&#34;&gt;Alex&lt;/a&gt; and &lt;a href=&#34;http://adrianbolboaca.ro/&#34;&gt;Adi Bolboaca&lt;/a&gt;, &lt;a href=&#34;http://about.me/aksalmi&#34;&gt;Aki Salmi&lt;/a&gt; and &lt;a href=&#34;http://code-cop.org/&#34;&gt;Peter Kofler&lt;/a&gt;. We didn&amp;rsquo;t know what to expect: the agenda was to try a &amp;ldquo;hardcore coderetreat&amp;rdquo;, in which the constraints would be incredibly difficult, but when you have six headstrong, opinionated people in a room, you really have no idea what&amp;rsquo;s going to happen.&lt;/p&gt;

&lt;p&gt;So it was surprising, but not, when we decided as a group to try and &lt;a href=&#34;http://monospacedmonologues.com/post/91841399505/mob-programming-and-the-importance-of-fun-at-work&#34;&gt;mob&lt;/a&gt; on a real project. We started on a website for people to find pair programming partners (which we still plan to launch some time after the Global Day of Coderetreat), with one person driving and the rest &lt;del&gt;yelling at them&lt;/del&gt; &lt;ins&gt;navigating&lt;/ins&gt;.&lt;/p&gt;

&lt;p&gt;We started off quite well, driving a simple set of static pages to get the flow hammered out, with lots of discussion about the product design, how it would work, what the first real feature would be and how we could launch a &lt;a href=&#34;http://en.wikipedia.org/wiki/Minimum_viable_product&#34;&gt;minimum viable product&lt;/a&gt;. Being an agile team, we had 45-minute iterations, ten minute retrospectives and five-minute breaks, just like a code retreat. Three iterations in, we had lunch, and people were feeling good.&lt;/p&gt;

&lt;p&gt;That feeling didn&amp;rsquo;t last. By mid-afternoon, we were lagging, and people were drifting off. The experiment wasn&amp;rsquo;t working as well as we hoped. In our fifth retrospective, we decided to get to a point where it would be sensible to split into pairs and play with the code, so we quickly knocked out the rest of the flow and broke apart to do the things we cared about doing.&lt;/p&gt;

&lt;p&gt;I, personally, was a bit dejected when we split apart. I thought that six skilled people should be able to do anything together. Pairing with Alex cheered me up very quickly, as we worked towards an acceptance test that focused us on what &lt;em&gt;we&lt;/em&gt; really cared about, while the others did different things. Aki and Peter worked on a new interface for the page handling, extending its capabilities while preserving the functionality at first. Sandro and Adi decided to show each other their styles of unit testing, as they&amp;rsquo;re very different.&lt;/p&gt;

&lt;p&gt;A few hours later, we had lots of cool changes to the product that we&amp;rsquo;ll probably blend back together.&lt;/p&gt;

&lt;p&gt;So what went wrong in the mobbing, and why did pairing work? As mob programming is really just pair programming taken to the next level, why didn&amp;rsquo;t things happen?&lt;/p&gt;

&lt;h2 id=&#34;by-failing-to-prepare-you-are-preparing-to-fail&#34;&gt;By failing to prepare, you are preparing to fail.&lt;/h2&gt;

&lt;p class=&#34;citation&#34;&gt;&lt;cite&gt;Benjamin Franklin&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;This exercise gave me some more confirmation of a hypothesis I&amp;rsquo;ve been kicking around in my head for a while:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The number of people on a team should be a function of its stability.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We had six people on the team, but it was very unstable. I&amp;rsquo;ll explain why.&lt;/p&gt;

&lt;h3 id=&#34;we-had-never-worked-with-each-other-before&#34;&gt;We had never worked with each other before.&lt;/h3&gt;

&lt;p&gt;We all knew each other, but only Sandro and I have worked with each other for more than a few hours. We have our own style, which is often quite loud and heated. We argue &lt;em&gt;a lot&lt;/em&gt;. It seems to work quite well for us, but it alienated the others, as they weren&amp;rsquo;t expecting it.&lt;/p&gt;

&lt;h3 id=&#34;we-had-not-agreed-that-we-would-work-on-this-problem-at-all&#34;&gt;We had not agreed that we would work on this problem at all.&lt;/h3&gt;

&lt;p&gt;The problem was a matter of consent, not consensus. Not everyone was committed to delivering a website; some wanted to just play around, and we didn&amp;rsquo;t so much decide to do one as assume that everyone was on the same page. While we did &lt;em&gt;state&lt;/em&gt; that we would build a website, simply stating something is not enough. People have to be emotionally committed, not just verbally committed.&lt;/p&gt;

&lt;h3 id=&#34;we-didn-t-know-what-we-were-building&#34;&gt;We didn&amp;rsquo;t know what we were building.&lt;/h3&gt;

&lt;p&gt;Alex had the idea for the website, which everyone &lt;em&gt;seemed to&lt;/em&gt; like, and for the first two iterations, he served as the product owner. However, he didn&amp;rsquo;t give us too much direction, which was probably a good move, as some people were there to build stuff, and some to experiment with code. Unfortunately, it meant that there was no clear focus on what we should be building.&lt;/p&gt;

&lt;h3 id=&#34;we-didn-t-set-iteration-goals&#34;&gt;We didn&amp;rsquo;t set iteration goals.&lt;/h3&gt;

&lt;p&gt;We had Scrum-style iterations, but no expectation of what we should be delivering. This, coupled with lots of new decisions during each retrospective, meant we didn&amp;rsquo;t go in a single direction; rather, we flew all over the place, often dropping snippets of code with little to no relevance to the actual project.&lt;/p&gt;

&lt;h2 id=&#34;so-we-propose-a-new-experiment&#34;&gt;So, we propose a new experiment.&lt;/h2&gt;

&lt;p&gt;This was a great experiment, and one I actually really enjoyed, despite my negative tone throughout this post. We didn&amp;rsquo;t get very far, but I derived a &lt;em&gt;lot&lt;/em&gt; of value from it, and that&amp;rsquo;s what I came for. It helped my refine my hypothesis, after all. It also helped me understand the value of planning meetings, product owners and defined backlogs in a way I hadn&amp;rsquo;t before. I honestly think that with those things, this would have been a success from the start.&lt;/p&gt;

&lt;p&gt;As a result of this experiment, Adi and I would like to run a new one. Two teams, working separately on the same thing with the intention of shipping it. One would start with a mob. The other would start with a pair, and increase by one every &amp;ldquo;iteration&amp;rdquo;. We&amp;rsquo;d conduct retrospectives after each iteration, with the goal of finding out who made more progress &lt;em&gt;and&lt;/em&gt; who felt better connected as a team. Perhaps we&amp;rsquo;ll give it a shot at the next &lt;a href=&#34;http://www.socrates-conference.de/&#34;&gt;SoCraTes DE&lt;/a&gt; or &lt;a href=&#34;http://socratesuk.org/&#34;&gt;SoCraTes UK&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I&amp;rsquo;d be really interested if anyone else has seen some studies on this or read about a similar concept elsewhereâ€”drop me a line in the comments below or by email or Twitter.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mob Programming, and the importance of fun at work</title>
      <link>http://codurance.com/blog/mob-programming/</link>
      <pubDate>Tue, 15 Jul 2014 12:00:00 +0000</pubDate>
      
      <guid>http://codurance.com/blog/mob-programming/</guid>
      <description>

&lt;p&gt;It&amp;rsquo;s been a few weeks since SoCraTes UK 2014, and I&amp;rsquo;ve had some time to reflect on the event and my learning experiences. Today, I want to talk about the biggest things that stood out for me.&lt;/p&gt;

&lt;h2 id=&#34;mind-blown&#34;&gt;Mind. Blown.&lt;/h2&gt;

&lt;p&gt;The session that really blew my mind was &lt;a href=&#34;https://twitter.com/gfalongi&#34;&gt;Gianfranco Alongi&lt;/a&gt;&amp;rsquo;s explanation of &lt;a href=&#34;http://mobprogramming.org/&#34;&gt;Mob Programming&lt;/a&gt;. It takes pair programming to the next level. Its tagline is &lt;em&gt;&amp;ldquo;All the brilliant people working at the same time, in the same space, at the same computer, on the same thing&amp;rdquo;&lt;/em&gt;, and that&amp;rsquo;s exactly what it is. A whole team, a keyboard, a mouse and a projector. One driver, and a few navigators, with a decent amount of rotation. I won&amp;rsquo;t go into too much detail; the website linked above has much more information. This wasn&amp;rsquo;t why this session blew my mind, though it was a really cool idea.&lt;/p&gt;

&lt;p&gt;What really struck me about this session is that Gianfranco and his team have become fast friends. They care about each other, they know about each others&amp;rsquo; lives and they all respect and value each others&amp;rsquo; company.&lt;/p&gt;

&lt;p&gt;They don&amp;rsquo;t necessarily see their work as a chore. They see it as fun. One thing that Gianfranco pointed out is that work and fun are not opposites, but fun and boredom are. If you&amp;rsquo;re not bored at work, it must be because you&amp;rsquo;re enjoying yourself. Even if it&amp;rsquo;s only a little bit.&lt;/p&gt;

&lt;p&gt;This talk set the tone for the rest of the conference for me. I started to talk to people about their jobs, not in sessions, but over coffee or beer. We talked about why they enjoyed their jobs and what they wanted to do better. I found that most people at SoCraTes do enjoy themselves, which is not what I&amp;rsquo;ve found of most developers in general. I don&amp;rsquo;t know why that is, exactly, though I could make a few educated guesses.&lt;/p&gt;

&lt;h2 id=&#34;a-brief-digression&#34;&gt;A Brief Digression&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve recently read &lt;a href=&#34;http://www.amazon.co.uk/gp/product/184767769X/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;amp;camp=1634&amp;amp;creative=6738&amp;amp;creativeASIN=184767769X&amp;amp;linkCode=as2&amp;amp;tag=monospamonolo-21&#34;&gt;Drive, by Daniel Pink&lt;/a&gt; and thoroughly enjoyed it. The central theme of the book is that financial remuneration is not the most important thing to a creative worker (and a software developer is most definitely creative). The three central drives of someone who works in a creative fashion are &lt;em&gt;autonomy&lt;/em&gt;, &lt;em&gt;mastery&lt;/em&gt; and &lt;em&gt;purpose&lt;/em&gt;. What this means is that the people who derive the most fulfilment from their jobs, and therefore are enjoying themselves the most, are those who have a lot of autonomy over what they do and how they do it, can use their job to help them in the pursuit of mastery, and find a lot of purpose in what they do.&lt;/p&gt;

&lt;p&gt;Obviously, there&amp;rsquo;s a lot more to it, and the book references a large number of case studies and psychological experiments, but the introduction lays the point of the book out plain and simple, and it was obvious to me from the moment I read it that it was true. I and many of the software developers I know derive pleasure and enjoyment from our work, not because we get paid massive amounts, but because of the above three principles. We have control over our work and we do it because we find meaning in it.&lt;/p&gt;

&lt;h2 id=&#34;and-back-full-circle&#34;&gt;And back, full circle&lt;/h2&gt;

&lt;p&gt;On the evening of the second day, &lt;a href=&#34;https://twitter.com/pawelduda&#34;&gt;PaweÅ‚ Duda&lt;/a&gt; and I decided to work on my &lt;a href=&#34;https://github.com/codurance/task-list&#34;&gt;task list kata&lt;/a&gt;. I&amp;rsquo;d run a session around it earlier that day and he wanted to pair on it with me to see how it would go.&lt;/p&gt;

&lt;p&gt;It got a bit popular, so we decided to mob, rather than pair. Six of us sat down in front of a projector, a little drunk, way after midnight, and commenced the exercise.&lt;/p&gt;

&lt;p&gt;Cue slow progress, lots of discussion and many different ideas about the right way to go. We decided to rotate every 10 minutes (after trying 5 and deciding it was way too little). The refactoring went slowly, but it went well. We tried a bunch of different approaches and settled on one I really liked (though by then it was 2am and we opted to go to bed). Throughout, more people dropped in until we didn&amp;rsquo;t just have a mob, we had a whole crew.&lt;/p&gt;

&lt;p&gt;It looked something like this.&lt;/p&gt;


&lt;img src=&#34;http://i.imgur.com/DKwJ4LN.jpg&#34; alt=&#34;Mob Programming at SoCraTes UK 2014&#34; title=&#34;Mob Programming at SoCraTes UK 2014&#34; class=&#34;img img-responsive style-screengrab&#34;/&gt;


&lt;p&gt;I found it remarkable how much enjoyed the exercise. The conversations that sprung up were really useful, and I could see the direction we were going was one none of us would have considered individually. That buzz I seek out every day at work from good conversations and solving interesting problems was there from the start, and throughout the exercise, it never left.&lt;/p&gt;

&lt;h2 id=&#34;and-then-a-retrospective&#34;&gt;And then, a retrospective&lt;/h2&gt;

&lt;p&gt;Afterwards, a few of us stuck around to talk about the exercise. The conversation veered off in an interesting direction, and really brought me back to what I was looking for all along. After only an hour or so, it was fairly clear that key to mob programming seemed to be empathy for everyone else in the group, especially the driver. It was important to discuss the work, but it was also important to empower everyone to speak up and argue their case, rather than drifting into the background. When we tried to compromise, it didn&amp;rsquo;t workâ€”people were quite unhappy. And it was paramount to ensure that everyone had the same goals in their head and were working toward them.&lt;/p&gt;

&lt;p&gt;Autonomy, mastery, and purpose.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s not enough to make your workplace fun. Fuck those Nerf guns you see all over Silicon Valley (and some companies on this end of the planet). They&amp;rsquo;re a workplace smell, just like company-mandated trips to the pub and &amp;ldquo;team-building events&amp;rdquo; (which are generally anything but). If you have to tell people they&amp;rsquo;re having fun, they&amp;rsquo;re not having fun.&lt;/p&gt;

&lt;p&gt;Instead, give people some control back. Give them 20% time. If they won&amp;rsquo;t take it, cut off access to the source repositories and force it on people. Give people a space to post up social activities. Give them a budget, too.&lt;/p&gt;

&lt;p&gt;People are amazing at making things fun, just as long as you let them.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>